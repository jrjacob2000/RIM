@using PagedList.Mvc
@model PagedList.IPagedList<Web.Models.Invoice>

@{
    ViewBag.Title = "All Bills";

    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "OrderDate_desc";
    }
}



<h4>All Bills</h4>
<hr />
<p>
    @Html.ActionLink("Create New", "Create",new {type="Bill" })
</p>
<table class="table">
    <tr>
        <th>
            Bill Number
            @*@Html.DisplayNameFor(model => model.InvoiceNumber)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Order.OrderNumber)
        </th>
        <th>
            <span>Customer</span>
            @*@Html.DisplayNameFor(model => model.Partner.Name)*@
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.First().InvoiceDate)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model.First().DueDate)
        </th>
        <th>
            Status
        </th>
        <th>
            Amount
        </th>
        <th>Balance</th>
       

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.InvoiceNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Order.OrderNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Order.Partner.Name)
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.InvoiceDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DueDate)
        </td>
        <td>
           @{
                    var status = Web.Controllers.Helper.StatusDisplay(item);
                    var color = status == Web.Controllers.Helper.Constants.InvoiceStatus.PAID ? "green" :
                    status == Web.Controllers.Helper.Constants.InvoiceStatus.OVERDUE ? "Orange" : "gray";
            }
        <span style="color:@color">
            @{
                @status
            }
        </span>
           
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Amount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Balance)
        </td>
        

        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}
</table>
<div class="pager">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
                       {
                           page,
                           sortOrder = ViewBag.currentSort
                       }))
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
</div>