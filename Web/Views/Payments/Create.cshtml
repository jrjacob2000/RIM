@model Web.Models.Payment

@{
    ViewBag.Title = "Create";
}
@{
    string showDetail = "hidden";
    if (Model.PaymentDetails.Count > 0)  
    {    
        showDetail = "visible";       
    }

}

<h2>Create</h2>
<div style="display:inline-block; width:100%">
    @if(Model.Type == Web.Controllers.Helper.Constants.PaymentType.RECIEVE)
    { 
        <h4 style="float:left">Receive Payment</h4>
    }
    else if (Model.Type == Web.Controllers.Helper.Constants.PaymentType.REFUND)
    {
        <h4 style="float:left">Refund Customer</h4>
    }
    <div style="float:right">
        <input type="submit" value="Save" form="paymentForm" class="btn btn-primary" /> |
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<hr style="margin-top:0px" />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm("Create", "Payments", FormMethod.Get))
{   
    @Html.HiddenFor(model => model.Type)
    @*<h4>Payment Recieved From:</h4>*@
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Customer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">      
                <table>
                    <tr>
                        <td style="width:280px">@Html.DropDownListFor(model => model.Partner_Id, new SelectList(ViewBag.Partners, "Value", "Text"), "- Please Select -", new { @class = "form-control" })</td>
                        <td><input type="submit" value="Search" class="btn btn-primary" /></td>
                    </tr>
                </table>
            </div>
           
        </div>
    </div>
}

<div class="form-horizontal">
    <div class="form-group">
        <div class="col-md-12" style="text-align:center">
            <p>@ViewBag.Message</p>
        </div>        
    </div>
</div>
 @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "paymentForm", @class = @showDetail }))
{
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Partner_Id)
            @Html.HiddenFor(model => model.Type)

            <div class="form-horizontal">               
                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <hr />
            <h4>Unpaid Invoices</h4>
            <table class="table">
                <tr>
                    @*<th>
                        @Html.DisplayNameFor(model => model.PaymentDetails.First().Order.InvoiceNumber)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.PaymentDetails.First().Invoice.InvoiceNumber)
                    </th>
                    <th>
                        Invoice Amount
                    </th>
                    <th>
                        Paid
                    </th>
                    <th>
                        Outstanding
                    </th>
                    <th>
                        Allocated
                    </th>

                </tr>
                @{
                    for (int i = 0; i < Model.PaymentDetails.Count(); i++)
                    {
                        @Html.HiddenFor(model => Model.PaymentDetails[i].Invoice_Id)
                        <tr>
                            @*<td>@Model.PaymentDetails[i].Order.OrderNumber</td>*@
                            <td>@Model.PaymentDetails[i].Invoice.InvoiceNumber</td>
                            <td>@Model.PaymentDetails[i].Invoice.Amount</td>
                            <td>@Model.PaymentDetails[i].Invoice.PaidAmount</td>
                            <td>@Model.PaymentDetails[i].Invoice.Balance</td>
                            <td>@Html.EditorFor(model => Model.PaymentDetails[i].Amount)</td>
                        </tr>
                    }
                }

            </table>
}

        <div>
           

        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
