@model Web.Models.Payment

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Payment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Partner_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Partner_Id, new SelectList(ViewBag.Partners, "Value", "Text"), "- Please Select -", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Partner_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
                
        <hr />
        <h4>Payment Allocation</h4>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentDetails.First().Order.OrderNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentDetails.First().Order.InvoiceNumber)
                </th>
                <th>
                    Invoice Amount
                </th>
                <th>
                    Paid
                </th>
                <th>
                    Outstanding
                </th>
                <th>
                    Allocated
                </th>

            </tr>
            @{
                for (int i = 0; i < Model.PaymentDetails.Count(); i++)
                {
                    @Html.HiddenFor(model => Model.PaymentDetails[i].Order_Id)
                            <tr>
                                <td>@Model.PaymentDetails[i].Order.OrderNumber</td>
                                <td>@Model.PaymentDetails[i].Order.InvoiceNumber</td>
                                <td>@Model.PaymentDetails[i].Order.Amount</td>
                                <td>@Model.PaymentDetails[i].Order.PaidAmount</td>
                                <td>@Model.PaymentDetails[i].Order.Balance</td>
                                <td>@Html.EditorFor(model => Model.PaymentDetails[i].Amount)</td>
                            </tr>
                }
            }

        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
