@model Web.Models.Partner
@{
    ViewBag.Title = "Details";
}
<style>
    .dl-horizontal dt { text-align: left; }
</style>
<h3>View @Model.Name</h3>

<div>
    <div class="row">
        <div class="custom-header-div">
            @Html.ActionLink("Invoice Payment", "Create", "Payments", new { Type = "RECIEVE", Partner_Id = Model.Id }, null) |
            @Html.ActionLink("Bill Payment", "Create", "Payments", new { Type = "BILL", Partner_Id = Model.Id }, null) |
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
    <hr />
    <h5  >Detail</h5>
    <div class="row">
        <div class="col-xs-6" style="flex: 50%">
            <dl class="dl-horizontal" style="margin-left:25px">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ShippingAddress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ShippingAddress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.BillingAddress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.BillingAddress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Email)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Email)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Phone)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Phone)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Contact)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Contact)
                </dd>

            </dl>
        </div>
        <div class="col-xs-6" style="background-color:#eff2ef;flex: 50%">
            <div class="row">
                <div class="col-xs-6" style="flex: 50%">
                    <dl style="margin-left:25px">
                        <dt>
                            <span>Receivables</span>
                        </dt>

                        <dd>
                            <span style="font-size:large; color:#ed8d38; font-weight:bold">@Model.Recievables</span>
                        </dd>
                       
                        <dt>
                            <span>Customer Credits</span>
                        </dt>

                        <dd>
                            <span style="font-size:large;color:#ed8d38; font-weight:bold">@Model.CustomerCredits</span>
                        </dd>
                       
                    </dl>
                </div>
                <div class="col-xs-6" style="flex: 50%">
                    <dl style="margin-left:25px">
                        <dt>
                            <span>Payables</span>
                        </dt>

                        <dd>
                            <span style="font-size:large; color:#ed8d38; font-weight:bold">@Model.Payables</span>
                        </dd>
                        <dt>
                            <span>Supplier Credits</span>
                        </dt>

                        <dd>
                            <span style="font-size:large;color:#ed8d38; font-weight:bold">@Model.SupplierCredits</span>
                        </dd>


                    </dl>
                </div>
            </div>
            
        </div>
            

        </div>
    </div>


@if (Model.Payments.Count() > 0)
{ 
<h5>Payments Made</h5>
    <table class="table table-striped">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Payments.First().Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Payments.First().Reference)
            </th>
            <th>
                Amount
            </th>
            <th>Payment Type</th>
        </tr>

        @foreach (var parent in Model.Payments)
        {
            foreach (var item in parent.PaymentDetails)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reference)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @{
                            var type = "";
                            if (item.Invoice != null || item.Credit != null)
                            {
                                type = item.Invoice != null ? item.Invoice.Type : item.Credit.Order.AdjustmentReason == "RETURN_CUSTOMER" ? "GIVE REFUND" : "RECEIVED REFUND";
                            }
                        }
                       @type
                    </td>

                </tr>
            }
        }
    </table>
}

<h5>Invoices</h5>
@if (Model.UnpaidInvoices.Where(x => x.Type == Helper.Constants.InvoiceType.INVOICE).Count() > 0)
{
    <table class="table table-striped" >
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().InvoiceDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().InvoiceNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().Balance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().Status)
            </th>
        </tr>

        @foreach (var item in Model.UnpaidInvoices.Where(x => x.Type == Helper.Constants.InvoiceType.INVOICE))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InvoiceDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InvoiceNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Balance)
                </td>
                <td>
                    @{
                        var status = Helper.StatusDisplay(item);
                        var color = status == Helper.Constants.InvoiceStatus.PAID ? "green" :
                        status == Helper.Constants.InvoiceStatus.OVERDUE ? "Orange" : "gray";
                    }
                    <span style="color:@color">
                        @{
                            @status
                        }
                    </span>
                </td>
            </tr>
        }
    </table>
}
else
{
    <div style="text-align:center">
        No available invoice
    </div>
}


<h5>Bills</h5>
@if (Model.UnpaidInvoices.Where(x => x.Type == Helper.Constants.InvoiceType.BILL).Count() > 0)
{
    <table class="table table-striped" >
        <tr>
            <th>
                <span>Bill Date</span>
            </th>
            <th>
                <span>Bill Number</span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().Balance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidInvoices.First().Status)
            </th>
        </tr>

        @foreach (var item in Model.UnpaidInvoices.Where(x => x.Type == Helper.Constants.InvoiceType.BILL))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InvoiceDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InvoiceNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Balance)
                </td>
                <td>
                    @{
            var status = Helper.StatusDisplay(item);
            var color = status == Helper.Constants.InvoiceStatus.PAID ? "green" :
            status == Helper.Constants.InvoiceStatus.OVERDUE ? "Orange" : "gray";
                    }
                    <span style="color:@color">
                        @{
                            @status
                        }
                    </span>
                </td>
            </tr>
        }
    </table>
}
else
{
    <div style="text-align:center">
        No available bill
    </div>
}

<h5>Credit Notes</h5>
@if (Model.UnpaidCreditNotes.Count() > 0)
{
    <table class="table table-striped" >
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidCreditNotes.First().CreditDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidCreditNotes.First().CreditNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidCreditNotes.First().DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnpaidCreditNotes.First().Amount)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.UnpaidCreditNotes.First().Status)
            </th>
            <th>
                Reason
            </th>
        </tr>

        @foreach (var item in Model.UnpaidCreditNotes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CreditDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreditNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.AdjustmentReason)
                </td>
            </tr>
        }
    </table>
}
else
{
    <div style="text-align:center">
        No available credit notes
    </div>
}

