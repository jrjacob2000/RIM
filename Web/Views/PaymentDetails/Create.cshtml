@model Web.Models.PaymentDetail

@{
    ViewBag.Title = "Create";
}

@if (@Model.Credit != null)
{
    <h3>Refund for @Model.Credit.CreditNumber</h3>
}
else
{
    <h3>Payment for @Model.Invoice.InvoiceNumber</h3>
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Invoice_Id)
    @Html.HiddenFor(model => model.Credit_Id)
    @Html.HiddenFor(model => model.Payment.Id)


    <div class="form-horizontal">
        <hr />
        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count() > 0)
        {
            <div class="alert alert-danger">
                <a class="close" data-dismiss="alert">×</a>
                <h5 class="alert-heading">Encounter the following error:</h5>
                @Html.ValidationSummary(true)
            </div>
        }
        
        <div class="form-group">
            @if (@Model.Credit != null)
            {
                @Html.Label("Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Credit.Partner.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                </div>
            }
            else
            {
                @Html.LabelFor(model => model.Invoice.Partner, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Invoice.Partner.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                </div>
            }    
            
        </div>     

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>   
                   
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>  
        
        <div class="form-group">
            @Html.LabelFor(model => model.Payment.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payment.Reference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payment.Reference, "", new { @class = "text-danger" })
            </div>
        </div>   

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>   

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
