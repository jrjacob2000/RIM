@model Web.Models.Order

@{
    ViewBag.Title = "Details";
}

<h2>Details - @Model.OrderNumber</h2>

<div>
    <div class="row">
        <div class="col-xs-6">
        </div>
        <div class="col-xs-6" style="text-align:right; margin-top:10px">   
                @Html.ActionLink("Edit", "Edit", new { id = Model.Id, returnUrl = Request.Url }) |
                @if (Model.OrderType == Web.Controllers.Helper.Constants.OrderType.PURCHASE)
                { 
                    @Html.ActionLink("Copy to Sales", "Create", new { IdToCopy = Model.Id, orderType = Web.Controllers.Helper.Constants.OrderType.SALE }, new { @title = "Promote this order into a new sales order" })
                    <span> |</span>
                }
                @if(Model.OrderType == Web.Controllers.Helper.Constants.OrderType.SALE)
                {
                    @*@Html.ActionLink("Invoice", "Index", "Invoice", new { searchString = Model.OrderNumber, orderType = Model.OrderType }, null)*@
                  if (Model.Invoices.FirstOrDefault() != null)
                  { 
                    @Html.ActionLink("Invoices", "Details", "Invoices", new { order_Id = Model.Id, Id = Model.Invoices.FirstOrDefault().Id }, null)
                  }
                    else
                  { 
                    @Html.ActionLink("Create Invoices", "Create", "Invoices", new { order_Id = Model.Id, orderType = Model.OrderType }, null)
                  }
                    <span> |</span>
                }
                else if (Model.OrderType == Web.Controllers.Helper.Constants.OrderType.PURCHASE )
                {
                    if (Model.Invoices.FirstOrDefault() != null)
                    {
                        @Html.ActionLink("Bill", "Details", "Bills", new { order_Id = Model.Id, Id = Model.Invoices.FirstOrDefault().Id }, null)
                    }
                    else
                    {
                        @Html.ActionLink("Create Bill", "Create", "Bills", new { order_Id = Model.Id, orderType = Model.OrderType }, null)
                    }
                    <span> |</span>
                }
                else if (Model.OrderType == Web.Controllers.Helper.Constants.OrderType.SUPPLIER_RETURN || Model.OrderType == Web.Controllers.Helper.Constants.OrderType.CUSTOMER_RETURN)
                {
                    if (Model.Credits.FirstOrDefault() != null)
                    {
                        @Html.ActionLink("Credit", "Details", "Credits", new { order_Id = Model.Id, Id = Model.Credits.FirstOrDefault().Id }, null)
                    }
                    else
                    {
                        @Html.ActionLink("Create Credit", "Create", "Credits", new { order_Id = Model.Id, orderType = Model.OrderType }, null)
                    }
                    <span> |</span>
                }
               
                @Html.ActionLink("Back to List", "Index", new { orderType = Model.OrderType }, null)         
        </div>
    </div>
   
    <hr style="margin-top:0;margin-bottom:0" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table style="min-width:340px">
        <tr>
            <td>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.OrderNumber)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.OrderNumber)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.OrderDate)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.OrderDate)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.ExpectedDate)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.ExpectedDate)
                    </dd>
                    
                </dl>
            </td>
            <td style="vertical-align:top">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.OrderType)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.OrderType)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Partner)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Partner.Name)
                    </dd>


                </dl>
            </td>
        </tr>
    </table>
        
</div>


<br />
<h4>Products</h4>

<div>
    <p>
        @Html.ActionLink("Add Item", "Create", "OrderDetails", new { Order_Id = Model.Id, orderType = Model.OrderType }, null) 
    </p>    
    
</div>
<div style="overflow:auto">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().Product)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().UnitDiscount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().AmountBeforeTax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().Tax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails.First().AmountAfterTax)
            </th>

            <th>
            @if (Model.OrderType == Web.Controllers.Helper.Constants.OrderType.SALE || Model.OrderType == Web.Controllers.Helper.Constants.OrderType.CUSTOMER_RETURN)
            {
                @Html.DisplayNameFor(model => model.OrderDetails.First().ProductPrice.PurchasePrice)
            }
            else
            {
                @Html.DisplayNameFor(model => model.OrderDetails.First().ProductPrice.SelesPrice)
            }

            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.OrderDetails)
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitDiscount)
                </td>
                <td>
                @if (item.Order.OrderType == Web.Controllers.Helper.Constants.OrderType.SALE || item.Order.OrderType == Web.Controllers.Helper.Constants.OrderType.CUSTOMER_RETURN)
                {
                        @Html.DisplayFor(modelItem => item.ProductPrice.SelesPrice )
                }
                else
                {
                        @Html.DisplayFor(modelItem => item.ProductPrice.PurchasePrice)
                }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AmountBeforeTax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AmountAfterTax)
                </td>
                <td>
                @if (item.Order.OrderType == Web.Controllers.Helper.Constants.OrderType.SALE || item.Order.OrderType == Web.Controllers.Helper.Constants.OrderType.CUSTOMER_RETURN)
                {
                        @Html.DisplayFor(modelItem => item.ProductPrice.PurchasePrice)
                }
                else
                {
                        @Html.DisplayFor(modelItem => item.ProductPrice.SelesPrice)
                }
                </td>
                <td>
                    <span style="white-space:nowrap">
                        @Html.ActionLink("Edit", "Edit", "OrderDetails", new { id = item.Id }, null) |                 
                        @Html.ActionLink("Details", "Details", "OrderDetails", new { id = item.Id }, null) |
                        @Html.ActionLink("Delete", "Delete", "OrderDetails", new { id = item.Id }, null)</span>
                </td>
            </tr>
    }
    </table>

   
</div>
<div class="row">
    <div class="col-xs-12" style="text-align:end; align-items:flex-end ">

        <table style="margin-right:0;margin-left:auto; ">
            <tr>
                <td style="width:150px; text-align:left">Other Charges:</td>
                <td style="text-align:right"><span style="font-weight:bolder; text-align:right">@Html.DisplayFor(model => model.OtherCharges) </span></td>
            </tr>
            <tr>
                <td style="text-align:left">Discount: </td>
                <td style="text-align:right"><span style="font-weight:bolder;text-align:right">@Html.DisplayFor(model => model.OrderDiscount) </span></td>
            </tr>
            <tr>
                <td style="text-align:left">Tax Rate:</td>
                <td style="text-align:right"><span style="font-weight:bolder;">@Html.DisplayFor(model => model.TaxRate) </span></td>
            </tr>
            <tr>
                <td style="font-weight:bolder;text-align:left ; border-bottom:solid; border-top:solid; border-width:1px; background-color:lightcyan">Total Amount:</td>
                <td style="text-align:right; border-bottom:solid; border-top:solid; border-width:1px; background-color:lightcyan"><span style="font-weight:bolder;text-align:right">@(((Model.OtherCharges + Model.Amount) - Model.OrderDiscount).ToString("N2"))</span></td>
            </tr>
        </table>

    </div>
</div>

<div class="row">
    <div class="col-xs-12" style="text-align:end; margin-top:40px">
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id, returnUrl = Request.Url }) |
        @Html.ActionLink("Back to List", "Index", new { orderType = Model.OrderType },null)
    </div>
</div>