@model IEnumerable<Web.Models.Order>

@{
    ViewBag.Title = "Orders";
}

<h2>Orders</h2>
<hr />
<form asp-action="Index" method="get">
    
    <div style="display:flex; flex-direction: row; justify-content:flex-start; align-items:center">
        <div style="margin-right:10px">
            <h4>Filter:</h4>
        </div>
        <div style="padding-right:5px">Order Type: </div>
        <div style="margin-right:10px">
            @Html.DropDownList("orderType", new SelectList(ViewBag.OrderTypes, "Value", "Text"), "- Please Select -", new { @class = "form-control" })
        </div>
        <input type="submit" value="search" class="btn btn-default" />
    </div>
</form>
    <hr />

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
<div style="overflow:auto">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpectedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Partner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OtherCharges)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDiscount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaxRate)
            </th>
            <th>
                Amount
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InvoiceNumber)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpectedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Partner.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OtherCharges)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDiscount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaxRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @if (item.InvoiceNumber == null && item.OrderType == Web.Controllers.Helper.Constants.OrderType.SALE)
                    {
                        @Html.ActionLink("Create Invoice", "Index", "Invoice", new { searchString = item.OrderNumber }, null)
                    }
                    else if (item.InvoiceNumber != null)
                    {
                        @Html.ActionLink(item.InvoiceNumber.ToString(), "Index", "Invoice", new { searchString = item.OrderNumber }, null)
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.InvoiceNumber)
                    }
                </td>
                <td>
                    <span style="white-space:nowrap">@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })</span>
                                       
                </td>
            </tr>
        }

    </table>
</div>
    <script type="text/javascript">
        var token = sessionStorage.getItem("tokenKey");
        var headers = {};
        if (token) {
            headers.Authorization = 'Bearer ' + token;
        }

    </script>
